{
    "api": "transformers.GPTBigCodeConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "vocab_size",
        "n_positions",
        "n_embd",
        "n_layer",
        "n_head",
        "n_inner",
        "activation_function",
        "resid_pdrop",
        "embd_pdrop",
        "attn_pdrop",
        "layer_norm_epsilon",
        "initializer_range",
        "scale_attn_weights",
        "use_cache",
        "bos_token_id",
        "eos_token_id",
        "attention_softmax_in_fp32",
        "scale_attention_softmax_in_fp32",
        "multi_query",
        "**kwargs"
    ],
    "params": [
        {
            "name": "vocab_size",
            "type": "int",
            "optional": true,
            "default": "50257",
            "description": "Vocabulary size of the GPT-2 model. Defines the number of different tokens that can be represented by theinputs_ids passed when calling GPTBigCodeModel."
        },
        {
            "name": "n_positions",
            "type": "int",
            "optional": true,
            "default": "1024",
            "description": "The maximum sequence length that this model might ever be used with. Typically set this to something largejust in case (e.g., 512 or 1024 or 2048)."
        },
        {
            "name": "n_embd",
            "type": "int",
            "optional": true,
            "default": "768",
            "description": "Dimensionality of the embeddings and hidden states."
        },
        {
            "name": "n_layer",
            "type": "int",
            "optional": true,
            "default": "12",
            "description": "Number of hidden layers in the Transformer encoder."
        },
        {
            "name": "n_head",
            "type": "int",
            "optional": true,
            "default": "12",
            "description": "Number of attention heads for each attention layer in the Transformer encoder."
        },
        {
            "name": "n_inner",
            "type": "int",
            "optional": true,
            "default": "None",
            "description": "Dimensionality of the inner feed-forward layers. None will set it to 4 times n_embd"
        },
        {
            "name": "activation_function",
            "type": "str",
            "optional": true,
            "default": "gelu_pytorch_tanh",
            "description": "Activation function, to be selected in the list [relu, silu, gelu, tanh, gelu_new, gelu_pytorch_tanh]."
        },
        {
            "name": "resid_pdrop",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout probability for all fully connected layers in the embeddings, encoder, and pooler."
        },
        {
            "name": "embd_pdrop",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout ratio for the embeddings."
        },
        {
            "name": "attn_pdrop",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout ratio for the attention."
        },
        {
            "name": "layer_norm_epsilon",
            "type": "float",
            "optional": true,
            "default": "1e-05",
            "description": "The epsilon to use in the layer normalization layers."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "0.02",
            "description": "The standard deviation of the truncated_normal_initializer for initializing all weight matrices."
        },
        {
            "name": "scale_attn_weights",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Scale attention weights by dividing by sqrt(hidden_size).."
        },
        {
            "name": "use_cache",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether or not the model should return the last key/values attentions (not used by all models)."
        },
        {
            "name": "attention_softmax_in_fp32",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether to call the fused softmax in float32."
        },
        {
            "name": "scale_attention_softmax_in_fp32",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether to scale the attention softmax in float32."
        },
        {
            "name": "attention_type",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether to use Multi-Query Attion (True) or Multi-Head Attention (False)."
        }
    ],
    "return": ""
}