{
    "api": "transformers.MobileNetV2Config",
    "type": "class",
    "version": "main",
    "args_list": [
        "num_channels",
        "image_size",
        "depth_multiplier",
        "depth_divisible_by",
        "min_depth",
        "expand_ratio",
        "output_stride",
        "first_layer_is_expansion",
        "finegrained_output",
        "hidden_act",
        "tf_padding",
        "classifier_dropout_prob",
        "initializer_range",
        "layer_norm_eps",
        "semantic_loss_ignore_index",
        "**kwargs"
    ],
    "params": [
        {
            "name": "num_channels",
            "type": "int",
            "optional": true,
            "default": "3",
            "description": "The number of input channels."
        },
        {
            "name": "image_size",
            "type": "int",
            "optional": true,
            "default": "224",
            "description": "The size (resolution) of each image."
        },
        {
            "name": "depth_multiplier",
            "type": "float",
            "optional": true,
            "default": "1.0",
            "description": "Shrinks or expands the number of channels in each layer. Default is 1.0, which starts the network with 32channels. This is sometimes also called alpha or width multiplier."
        },
        {
            "name": "depth_divisible_by",
            "type": "int",
            "optional": true,
            "default": "8",
            "description": "The number of channels in each layer will always be a multiple of this number."
        },
        {
            "name": "min_depth",
            "type": "int",
            "optional": true,
            "default": "8",
            "description": "All layers will have at least this many channels."
        },
        {
            "name": "expand_ratio",
            "type": "float",
            "optional": true,
            "default": "6.0",
            "description": "The number of output channels of the first layer in each block is input channels times expansion ratio."
        },
        {
            "name": "output_stride",
            "type": "int",
            "optional": true,
            "default": "32",
            "description": "The ratio between the spatial resolution of the input and output feature maps. By default the model reducesthe input dimensions by a factor of 32. If output_stride is 8 or 16, the model uses dilated convolutionson the depthwise layers instead of regular convolutions, so that the feature maps never become more than 8xor 16x smaller than the input image."
        },
        {
            "name": "first_layer_is_expansion",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "True if the very first convolution layer is also the expansion layer for the first expansion block."
        },
        {
            "name": "finegrained_output",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "If true, the number of output channels in the final convolution layer will stay large (1280) even ifdepth_multiplier is less than 1."
        },
        {
            "name": "hidden_act",
            "type": "str,function",
            "optional": true,
            "default": "relu6",
            "description": "The non-linear activation function (function or string) in the Transformer encoder and convolution layers."
        },
        {
            "name": "tf_padding",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether to use TensorFlow padding rules on the convolution layers."
        },
        {
            "name": "classifier_dropout_prob",
            "type": "float",
            "optional": true,
            "default": "0.8",
            "description": "The dropout ratio for attached classifiers."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "0.02",
            "description": "The standard deviation of the truncated_normal_initializer for initializing all weight matrices."
        },
        {
            "name": "layer_norm_eps",
            "type": "float",
            "optional": true,
            "default": "0.001",
            "description": "The epsilon used by the layer normalization layers."
        },
        {
            "name": "semantic_loss_ignore_index",
            "type": "int",
            "optional": true,
            "default": "255",
            "description": "The index that is ignored by the loss function of the semantic segmentation model."
        }
    ],
    "return": ""
}