{
    "api": "transformers.LukeForQuestionAnswering.forward",
    "type": "function",
    "version": "main",
    "args_list": [
        "input_ids:",
        "attention_mask",
        "token_type_ids",
        "position_ids",
        "entity_ids",
        "entity_attention_mask",
        "entity_token_type_ids",
        "entity_position_ids",
        "head_mask",
        "inputs_embeds",
        "start_positions",
        "end_positions",
        "output_attentions",
        "output_hidden_states",
        "return_dict",
        ")"
    ],
    "params": [
        {
            "name": "input_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length)",
            "optional": false,
            "default": "",
            "description": "Indices of input sequence tokens in the vocabulary.Indices can be obtained using AutoTokenizer. See PreTrainedTokenizer.encode() andPreTrainedTokenizer.call() for details.What are input IDs?"
        },
        {
            "name": "attention_mask",
            "type": "torch.FloatTensor of shape (batch_size, sequence_length",
            "optional": true,
            "default": "",
            "description": "Mask to avoid performing attention on padding token indices. Mask values selected in [0, 1]:1 for tokens that are not masked,0 for tokens that are masked.What are attention masks?"
        },
        {
            "name": "token_type_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length",
            "optional": true,
            "default": "",
            "description": "Segment token indices to indicate first and second portions of the inputs. Indices are selected in [0, 1]:0 corresponds to a sentence A token,1 corresponds to a sentence B token.What are token type IDs?"
        },
        {
            "name": "position_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length",
            "optional": true,
            "default": "",
            "description": "Indices of positions of each input sequence tokens in the position embeddings. Selected in the range [0, config.max_position_embeddings - 1].What are position IDs?"
        },
        {
            "name": "entity_ids",
            "type": "torch.LongTensor of shape (batch_size, entity_length)",
            "optional": false,
            "default": "",
            "description": "Indices of entity tokens in the entity vocabulary.Indices can be obtained using AutoTokenizer. See PreTrainedTokenizer.encode() andPreTrainedTokenizer.call() for details."
        },
        {
            "name": "entity_attention_mask",
            "type": "torch.FloatTensor of shape (batch_size, entity_length",
            "optional": true,
            "default": "",
            "description": "Mask to avoid performing attention on padding entity token indices. Mask values selected in [0, 1]:1 for entity tokens that are not masked,0 for entity tokens that are masked."
        },
        {
            "name": "entity_token_type_ids",
            "type": "torch.LongTensor of shape (batch_size, entity_length",
            "optional": true,
            "default": "",
            "description": "Segment token indices to indicate first and second portions of the entity token inputs. Indices areselected in [0, 1]:0 corresponds to a portion A entity token,1 corresponds to a portion B entity token."
        },
        {
            "name": "entity_position_ids",
            "type": "torch.LongTensor of shape (batch_size, entity_length, max_mention_length",
            "optional": true,
            "default": "",
            "description": "Indices of positions of each input entity in the position embeddings. Selected in the range [0, config.max_position_embeddings - 1]."
        },
        {
            "name": "inputs_embeds",
            "type": "torch.FloatTensor of shape (batch_size, sequence_length, hidden_size",
            "optional": true,
            "default": "",
            "description": "Optionally, instead of passing input_ids you can choose to directly pass an embedded representation. Thisis useful if you want more control over how to convert input_ids indices into associated vectors than themodels internal embedding lookup matrix."
        },
        {
            "name": "head_mask",
            "type": "torch.FloatTensor of shape (num_heads,),(num_layers, num_heads",
            "optional": true,
            "default": "",
            "description": "Mask to nullify selected heads of the self-attention modules. Mask values selected in [0, 1]:1 indicates the head is not masked,0 indicates the head is masked."
        },
        {
            "name": "output_attentions",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return the attentions tensors of all attention layers. See attentions under returnedtensors for more detail."
        },
        {
            "name": "output_hidden_states",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return the hidden states of all layers. See hidden_states under returned tensors formore detail."
        },
        {
            "name": "return_dict",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return a ModelOutput instead of a plain tuple."
        },
        {
            "name": "start_positions",
            "type": "torch.LongTensor of shape (batch_size,",
            "optional": true,
            "default": "",
            "description": "Labels for position (index) of the start of the labelled span for computing the token classification loss.Positions are clamped to the length of the sequence (sequence_length). Position outside of the sequenceare not taken into account for computing the loss."
        },
        {
            "name": "end_positions",
            "type": "torch.LongTensor of shape (batch_size,",
            "optional": true,
            "default": "",
            "description": "Labels for position (index) of the end of the labelled span for computing the token classification loss.Positions are clamped to the length of the sequence (sequence_length). Position outside of the sequenceare not taken into account for computing the loss."
        }
    ],
    "return": "transformers.models.luke.modeling_luke.LukeQuestionAnsweringModelOutput or tuple(torch.FloatTensor)"
}