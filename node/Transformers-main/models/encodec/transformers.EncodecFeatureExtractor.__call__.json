{
    "api": "transformers.EncodecFeatureExtractor.__call__",
    "type": "function",
    "version": "main",
    "args_list": [
        "raw_audio:",
        "typing.Union[numpy.ndarray,",
        "typing.List[float],",
        "typing.List[numpy.ndarray],",
        "typing.List[typing.List[float]]]",
        "padding",
        "str,",
        "transformers.utils.generic.PaddingStrategy,",
        "NoneType]",
        "truncation",
        "max_length",
        "return_tensors",
        "transformers.utils.generic.TensorType,",
        "NoneType]",
        "sampling_rate"
    ],
    "params": [
        {
            "name": "raw_audio",
            "type": "np.ndarray, List[float], List[np.ndarray], List[List[float]]",
            "optional": false,
            "default": "",
            "description": "The sequence or batch of sequences to be processed. Each sequence can be a numpy array, a list of floatvalues, a list of numpy arrays or a list of list of float values. The numpy array must be of shape(num_samples,) for mono audio (feature_size = 1), or (2, num_samples) for stereo audio(feature_size = 2)."
        },
        {
            "name": "padding",
            "type": "bool, str,PaddingStrategy",
            "optional": true,
            "default": "",
            "description": "Select a strategy to pad the returned sequences (according to the models padding side and paddingindex) among:True or longest: Pad to the longest sequence in the batch (or no padding if only a singlesequence if provided).max_length: Pad to a maximum length specified with the argument max_length or to the maximumacceptable input length for the model if that argument is not provided.False or do_not_pad (default): No padding (i.e., can output a batch with sequences of differentlengths)."
        },
        {
            "name": "truncation",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Activates truncation to cut input sequences longer than max_length to max_length."
        },
        {
            "name": "max_length",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Maximum length of the returned list and optionally padding length (see above)."
        },
        {
            "name": "return_tensors",
            "type": "str,TensorType",
            "optional": true,
            "default": "",
            "description": "If set, will return tensors instead of list of python integers. Acceptable values are:tf: Return TensorFlow tf.constant objects.pt: Return PyTorch torch.Tensor objects.np: Return Numpy np.ndarray objects."
        },
        {
            "name": "sampling_rate",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The sampling rate at which the audio input was sampled. It is strongly recommended to passsampling_rate at the forward call to prevent silent errors."
        }
    ],
    "return": ""
}