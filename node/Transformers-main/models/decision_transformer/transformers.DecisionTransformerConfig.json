{
    "api": "transformers.DecisionTransformerConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "state_dim",
        "act_dim",
        "hidden_size",
        "max_ep_len",
        "action_tanh",
        "vocab_size",
        "n_positions",
        "n_layer",
        "n_head",
        "n_inner",
        "activation_function",
        "resid_pdrop",
        "embd_pdrop",
        "attn_pdrop",
        "layer_norm_epsilon",
        "initializer_range",
        "scale_attn_weights",
        "use_cache",
        "bos_token_id",
        "eos_token_id",
        "scale_attn_by_inverse_layer_idx",
        "reorder_and_upcast_attn",
        "**kwargs"
    ],
    "params": [
        {
            "name": "state_dim",
            "type": "int",
            "optional": true,
            "default": "17",
            "description": "The state size for the RL environment"
        },
        {
            "name": "act_dim",
            "type": "int",
            "optional": true,
            "default": "4",
            "description": "The size of the output action space"
        },
        {
            "name": "hidden_size",
            "type": "int",
            "optional": true,
            "default": "128",
            "description": "The size of the hidden layers"
        },
        {
            "name": "max_ep_len",
            "type": "int",
            "optional": true,
            "default": "4096",
            "description": "The maximum length of an episode in the environment"
        },
        {
            "name": "action_tanh",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether to use a tanh activation on action prediction"
        },
        {
            "name": "vocab_size",
            "type": "int",
            "optional": true,
            "default": "1",
            "description": "Vocabulary size of the GPT-2 model. Defines the number of different tokens that can be represented by theinputs_ids passed when calling DecisionTransformerModel."
        },
        {
            "name": "n_positions",
            "type": "int",
            "optional": true,
            "default": "1024",
            "description": "The maximum sequence length that this model might ever be used with. Typically set this to something largejust in case (e.g., 512 or 1024 or 2048)."
        },
        {
            "name": "n_layer",
            "type": "int",
            "optional": true,
            "default": "3",
            "description": "Number of hidden layers in the Transformer encoder."
        },
        {
            "name": "n_head",
            "type": "int",
            "optional": true,
            "default": "1",
            "description": "Number of attention heads for each attention layer in the Transformer encoder."
        },
        {
            "name": "n_inner",
            "type": "int",
            "optional": true,
            "default": "None",
            "description": "Dimensionality of the inner feed-forward layers. If unset, will default to 4 times n_embd."
        },
        {
            "name": "activation_function",
            "type": "str",
            "optional": true,
            "default": "relu",
            "description": "Activation function, to be selected in the list [relu, silu, gelu, tanh, gelu_new]."
        },
        {
            "name": "resid_pdrop",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout probability for all fully connected layers in the embeddings, encoder, and pooler."
        },
        {
            "name": "embd_pdrop",
            "type": "int",
            "optional": true,
            "default": "0.1",
            "description": "The dropout ratio for the embeddings."
        },
        {
            "name": "attn_pdrop",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout ratio for the attention."
        },
        {
            "name": "layer_norm_epsilon",
            "type": "float",
            "optional": true,
            "default": "1e-05",
            "description": "The epsilon to use in the layer normalization layers."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "0.02",
            "description": "The standard deviation of the truncated_normal_initializer for initializing all weight matrices."
        },
        {
            "name": "scale_attn_weights",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Scale attention weights by dividing by sqrt(hidden_size).."
        },
        {
            "name": "use_cache",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether or not the model should return the last key/values attentions (not used by all models)."
        },
        {
            "name": "scale_attn_by_inverse_layer_idx",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether to additionally scale attention weights by 1 / layer_idx + 1."
        },
        {
            "name": "reorder_and_upcast_attn",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether to scale keys (K) prior to computing attention (dot-product) and upcast attentiondot-product/softmax to float() when training with mixed precision."
        }
    ],
    "return": ""
}