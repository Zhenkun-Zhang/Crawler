{
    "api": "transformers.FlavaTextConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "vocab_size:",
        "type_vocab_size",
        "max_position_embeddings",
        "position_embedding_type",
        "hidden_size",
        "num_hidden_layers",
        "num_attention_heads",
        "intermediate_size",
        "hidden_act",
        "hidden_dropout_prob",
        "attention_probs_dropout_prob",
        "initializer_range",
        "layer_norm_eps",
        "pad_token_id",
        "qkv_bias",
        "**kwargs"
    ],
    "params": [
        {
            "name": "vocab_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Vocabulary size of the BERT model. Defines the number of different tokens that can be represented by theinputs_ids passed when calling FlavaTextModel."
        },
        {
            "name": "type_vocab_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The vocabulary size of the token_type_ids passed when calling FlavaTextModel. Note that even thoughtext encoder allows token_type_idss value as 2, for text-only pretraining and fine-tuning, only 1 isused similar to RoBERTa."
        },
        {
            "name": "max_position_embeddings",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The maximum sequence length that this model might ever be used with. Typically set this to something largejust in case (e.g., 512 or 1024 or 2048). For VL, max_length passed to model is 77."
        },
        {
            "name": "position_embedding_type",
            "type": "str",
            "optional": true,
            "default": "",
            "description": "Type of position embedding. Choose one of absolute, relative_key, relative_key_query. Forpositional embeddings use absolute. For more information on relative_key, please refer toSelf-Attention with Relative Position Representations (Shaw et al.).For more information on relative_key_query, please refer to Method 4 in Improve Transformer Modelswith Better Relative Position Embeddings (Huang et al.)."
        },
        {
            "name": "hidden_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Dimensionality of the encoder layers and the pooler layer."
        },
        {
            "name": "num_hidden_layers",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Number of hidden layers in the Transformer encoder."
        },
        {
            "name": "num_attention_heads",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Number of attention heads for each attention layer in the Transformer encoder."
        },
        {
            "name": "intermediate_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Dimensionality of the intermediate (i.e., feed-forward) layer in the Transformer encoder."
        },
        {
            "name": "hidden_act",
            "type": "str,function",
            "optional": true,
            "default": "",
            "description": "The non-linear activation function (function or string) in the encoder and pooler. If string, gelu,relu, selu and gelu_new are supported."
        },
        {
            "name": "hidden_dropout_prob",
            "type": "float",
            "optional": true,
            "default": "",
            "description": "The dropout probability for all fully connected layers in the embeddings, encoder, and pooler."
        },
        {
            "name": "attention_probs_dropout_prob",
            "type": "float",
            "optional": true,
            "default": "",
            "description": "The dropout ratio for the attention probabilities."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "",
            "description": "The standard deviation of the truncated_normal_initializer for initializing all weight matrices."
        },
        {
            "name": "layer_norm_eps",
            "type": "float",
            "optional": true,
            "default": "",
            "description": "The epsilon used by the layer normalization layers."
        },
        {
            "name": "image_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The size (resolution) of each image."
        },
        {
            "name": "patch_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The size (resolution) of each patch."
        },
        {
            "name": "num_channels",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "The number of input channels."
        },
        {
            "name": "qkv_bias",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether to add a bias to the queries, keys and values."
        }
    ],
    "return": ""
}