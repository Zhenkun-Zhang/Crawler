{
    "api": "transformers.HiggsConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "bits:",
        "p",
        "modules_to_not_convert",
        "hadamard_size",
        "group_size",
        "tune_metadata",
        "typing.Any]]",
        "**kwargs"
    ],
    "params": [
        {
            "name": "bits",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Number of bits to use for quantization. Can be 2, 3 or 4. Default is 4."
        },
        {
            "name": "p",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Quantization grid dimension. 1 and 2 are supported. 2 is always better in practice. Default is 2."
        },
        {
            "name": "modules_to_not_convert",
            "type": "list",
            "optional": true,
            "default": "",
            "description": "List of linear layers that should not be quantized."
        },
        {
            "name": "hadamard_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Hadamard size for the HIGGS method. Default is 512. Input dimension of matrices is padded to this value. Decreasing this below 512 will reduce the quality of the quantization."
        },
        {
            "name": "group_size",
            "type": "int",
            "optional": true,
            "default": "",
            "description": "Group size for the HIGGS method. Can be 64, 128 or 256. Decreasing it barely affects the performance. Default is 256. Must be a divisor of hadamard_size."
        },
        {
            "name": "tune_metadata",
            "type": "‘dict’",
            "optional": true,
            "default": "",
            "description": "Module-wise metadata (gemm block shapes, GPU metadata, etc.) for saving the kernel tuning results. Default is an empty dictionary. Is set automatically during tuning."
        }
    ],
    "return": ""
}