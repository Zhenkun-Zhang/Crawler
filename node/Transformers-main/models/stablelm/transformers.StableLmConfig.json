{
    "api": "transformers.StableLmConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "vocab_size",
        "intermediate_size",
        "hidden_size",
        "num_hidden_layers",
        "num_attention_heads",
        "num_key_value_heads",
        "hidden_act",
        "max_position_embeddings",
        "initializer_range",
        "layer_norm_eps",
        "use_cache",
        "tie_word_embeddings",
        "rope_theta",
        "rope_scaling",
        "use_qkv_bias",
        "qk_layernorm",
        "use_parallel_residual",
        "hidden_dropout",
        "attention_dropout",
        "partial_rotary_factor",
        "bos_token_id",
        "eos_token_id",
        "**kwargs"
    ],
    "params": [
        {
            "name": "vocab_size",
            "type": "int",
            "optional": true,
            "default": "50304",
            "description": "Vocabulary size of the StableLM model. Defines the number of different tokens thatcan be represented by the inputs_ids passed when calling StableLmModel."
        },
        {
            "name": "intermediate_size",
            "type": "int",
            "optional": true,
            "default": "6912",
            "description": "Dimension of the MLP representations."
        },
        {
            "name": "hidden_size",
            "type": "int",
            "optional": true,
            "default": "2560",
            "description": "Number of hidden layers in the Transformer decoder."
        },
        {
            "name": "num_hidden_layers",
            "type": "int",
            "optional": true,
            "default": "32",
            "description": "Number of hidden layers in the Transformer decoder."
        },
        {
            "name": "num_attention_heads",
            "type": "int",
            "optional": true,
            "default": "32",
            "description": "Number of attention heads for each attention layer in the Transformer encoder."
        },
        {
            "name": "num_key_value_heads",
            "type": "int",
            "optional": true,
            "default": "32",
            "description": "This is the number of key_value heads that should be used to implement Grouped Query Attention. Ifnum_key_value_heads=num_attention_heads, the model will use Multi Head Attention (MHA), ifnum_key_value_heads=1 the model will use Multi Query Attention (MQA) otherwise GQA is used. Whenconverting a multi-head checkpoint to a GQA checkpoint, each group key and value head should be constructedby meanpooling all the original heads within that group. For more details checkout thispaper. If it is not specified, will default tonum_attention_heads."
        },
        {
            "name": "hidden_act",
            "type": "str,function",
            "optional": true,
            "default": "silu",
            "description": "The non-linear activation function (function or string)."
        },
        {
            "name": "max_position_embeddings",
            "type": "int",
            "optional": true,
            "default": "4096",
            "description": "The maximum sequence length that this model might ever be used with.Typically set this to something large just in case (e.g., 512 or 1024 or 2048)."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "0.02",
            "description": "The standard deviation of the truncated_normal_initializer for initializingall weight matrices."
        },
        {
            "name": "layer_norm_eps",
            "type": "float",
            "optional": true,
            "default": "1e-05",
            "description": "The epsilon used by the normalization layers."
        },
        {
            "name": "use_cache",
            "type": "bool",
            "optional": true,
            "default": "True",
            "description": "Whether or not the model should return the last key/values attentions(not used by all models). Only relevant if config.is_decoder=True."
        },
        {
            "name": "tie_word_embeddings",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether the models input and output word embeddings should be tied."
        },
        {
            "name": "rope_theta",
            "type": "float",
            "optional": true,
            "default": "10000",
            "description": "The base period of the RoPE embeddings."
        },
        {
            "name": "rope_scaling",
            "type": "Dict",
            "optional": true,
            "default": "None",
            "description": "Dictionary containing the scaling configuration for the RoPE embeddings. NOTE: if you apply new rope typeand you expect the model to work on longer max_position_embeddings, we recommend you to update this valueaccordingly.Expected contents:rope_type (str):The sub-variant of RoPE to use. Can be one of [default, linear, dynamic, yarn, longrope,llama3], with default being the original RoPE implementation.factor (float, optional):Used with all rope types except default. The scaling factor to apply to the RoPE embeddings. Inmost scaling types, a factor of x will enable the model to handle sequences of length x original maximum pre-trained length.original_max_position_embeddings (int, optional):Used with dynamic, longrope and llama3. The original max position embeddings used duringpretraining.attention_factor (float, optional):Used with yarn and longrope. The scaling factor to be applied on the attentioncomputation. If unspecified, it defaults to value recommended by the implementation, using thefactor field to infer the suggested value.beta_fast (float, optional):Only used with yarn. Parameter to set the boundary for extrapolation (only) in the linearramp function. If unspecified, it defaults to 32.beta_slow (float, optional):Only used with yarn. Parameter to set the boundary for interpolation (only) in the linearramp function. If unspecified, it defaults to 1.short_factor (List[float], optional):Only used with longrope. The scaling factor to be applied to short contexts (<original_max_position_embeddings). Must be a list of numbers with the same length as the hiddensize divided by the number of attention heads divided by 2long_factor (List[float], optional):Only used with longrope. The scaling factor to be applied to long contexts (<original_max_position_embeddings). Must be a list of numbers with the same length as the hiddensize divided by the number of attention heads divided by 2low_freq_factor (float, optional):Only used with llama3. Scaling factor applied to low frequency components of the RoPEhigh_freq_factor (float, optional*):Only used with llama3. Scaling factor applied to high frequency components of the RoPE"
        },
        {
            "name": "use_qkv_bias",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether or not the model should use bias for qkv layers."
        },
        {
            "name": "qk_layernorm",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether or not to normalize, per head, the Queries and Keys after projecting the hidden states."
        },
        {
            "name": "use_parallel_residual",
            "type": "bool",
            "optional": true,
            "default": "False",
            "description": "Whether to use a parallel formulation in each Transformer layer, which can provide a slight trainingspeedup at large scales."
        },
        {
            "name": "hidden_dropout",
            "type": "float",
            "optional": true,
            "default": "0.0",
            "description": "The dropout ratio after applying the MLP to the hidden states."
        },
        {
            "name": "attention_dropout",
            "type": "float",
            "optional": true,
            "default": "0.0",
            "description": "The dropout ratio for the attention probabilities."
        },
        {
            "name": "partial_rotary_factor",
            "type": "float",
            "optional": true,
            "default": "0.25",
            "description": "Percentage of the query and keys which will have rotary embedding."
        },
        {
            "name": "bos_token_id",
            "type": "int",
            "optional": true,
            "default": "0",
            "description": "The id of the BOS token in the vocabulary."
        },
        {
            "name": "eos_token_id",
            "type": "int",
            "optional": true,
            "default": "0",
            "description": "The id of the EOS token in the vocabulary."
        }
    ],
    "return": ""
}