{
    "api": "transformers.RealmConfig",
    "type": "class",
    "version": "main",
    "args_list": [
        "vocab_size",
        "hidden_size",
        "retriever_proj_size",
        "num_hidden_layers",
        "num_attention_heads",
        "num_candidates",
        "intermediate_size",
        "hidden_act",
        "hidden_dropout_prob",
        "attention_probs_dropout_prob",
        "max_position_embeddings",
        "type_vocab_size",
        "initializer_range",
        "layer_norm_eps",
        "span_hidden_size",
        "max_span_width",
        "reader_layer_norm_eps",
        "reader_beam_size",
        "reader_seq_len",
        "num_block_records",
        "searcher_beam_size",
        "pad_token_id",
        "bos_token_id",
        "eos_token_id",
        "**kwargs"
    ],
    "params": [
        {
            "name": "vocab_size",
            "type": "int",
            "optional": true,
            "default": "30522",
            "description": "Vocabulary size of the REALM model. Defines the number of different tokens that can be represented by theinputs_ids passed when calling RealmEmbedder, RealmScorer, RealmKnowledgeAugEncoder, orRealmReader."
        },
        {
            "name": "hidden_size",
            "type": "int",
            "optional": true,
            "default": "768",
            "description": "Dimension of the encoder layers and the pooler layer."
        },
        {
            "name": "retriever_proj_size",
            "type": "int",
            "optional": true,
            "default": "128",
            "description": "Dimension of the retriever(embedder) projection."
        },
        {
            "name": "num_hidden_layers",
            "type": "int",
            "optional": true,
            "default": "12",
            "description": "Number of hidden layers in the Transformer encoder."
        },
        {
            "name": "num_attention_heads",
            "type": "int",
            "optional": true,
            "default": "12",
            "description": "Number of attention heads for each attention layer in the Transformer encoder."
        },
        {
            "name": "num_candidates",
            "type": "int",
            "optional": true,
            "default": "8",
            "description": "Number of candidates inputted to the RealmScorer or RealmKnowledgeAugEncoder."
        },
        {
            "name": "intermediate_size",
            "type": "int",
            "optional": true,
            "default": "3072",
            "description": "Dimension of the intermediate (i.e., feed-forward) layer in the Transformer encoder."
        },
        {
            "name": "hidden_act",
            "type": "str,function",
            "optional": true,
            "default": "gelu_new",
            "description": "The non-linear activation function (function or string) in the encoder and pooler. If string, gelu,relu, selu and gelu_new are supported."
        },
        {
            "name": "hidden_dropout_prob",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout probability for all fully connected layers in the embeddings, encoder, and pooler."
        },
        {
            "name": "attention_probs_dropout_prob",
            "type": "float",
            "optional": true,
            "default": "0.1",
            "description": "The dropout ratio for the attention probabilities."
        },
        {
            "name": "max_position_embeddings",
            "type": "int",
            "optional": true,
            "default": "512",
            "description": "The maximum sequence length that this model might ever be used with. Typically set this to something largejust in case (e.g., 512 or 1024 or 2048)."
        },
        {
            "name": "type_vocab_size",
            "type": "int",
            "optional": true,
            "default": "2",
            "description": "The vocabulary size of the token_type_ids passed when calling RealmEmbedder, RealmScorer,RealmKnowledgeAugEncoder, or RealmReader."
        },
        {
            "name": "initializer_range",
            "type": "float",
            "optional": true,
            "default": "0.02",
            "description": "The standard deviation of the truncated_normal_initializer for initializing all weight matrices."
        },
        {
            "name": "layer_norm_eps",
            "type": "float",
            "optional": true,
            "default": "1e-12",
            "description": "The epsilon used by the layer normalization layers."
        },
        {
            "name": "span_hidden_size",
            "type": "int",
            "optional": true,
            "default": "256",
            "description": "Dimension of the readers spans."
        },
        {
            "name": "max_span_width",
            "type": "int",
            "optional": true,
            "default": "10",
            "description": "Max span width of the reader."
        },
        {
            "name": "reader_layer_norm_eps",
            "type": "float",
            "optional": true,
            "default": "0.001",
            "description": "The epsilon used by the readers layer normalization layers."
        },
        {
            "name": "reader_beam_size",
            "type": "int",
            "optional": true,
            "default": "5",
            "description": "Beam size of the reader."
        },
        {
            "name": "reader_seq_len",
            "type": "int",
            "optional": true,
            "default": "320",
            "description": "Maximum sequence length of the reader."
        },
        {
            "name": "num_block_records",
            "type": "int",
            "optional": true,
            "default": "13353718",
            "description": "Number of block records."
        },
        {
            "name": "searcher_beam_size",
            "type": "int",
            "optional": true,
            "default": "5000",
            "description": "Beam size of the searcher. Note that when eval mode is enabled, searcher_beam_size will be the same asreader_beam_size."
        }
    ],
    "return": ""
}