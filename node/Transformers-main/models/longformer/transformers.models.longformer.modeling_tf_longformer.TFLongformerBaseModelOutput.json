{
    "api": "transformers.models.longformer.modeling_tf_longformer.TFLongformerBaseModelOutput",
    "type": "class",
    "version": "main",
    "args_list": [
        "last_hidden_state:",
        "tf.Tensor",
        "hidden_states",
        "...]",
        "|",
        "attentions",
        "...]",
        "|",
        "global_attentions",
        "...]",
        "|"
    ],
    "params": [
        {
            "name": "last_hidden_state",
            "type": "tf.Tensor of shape (batch_size, sequence_length, hidden_size)",
            "optional": false,
            "default": "",
            "description": "Sequence of hidden-states at the output of the last layer of the model."
        },
        {
            "name": "hidden_states",
            "type": "tuple(tf.Tensor",
            "optional": true,
            "default": "",
            "description": "Tuple of tf.Tensor (one for the output of the embeddings + one for the output of each layer) of shape(batch_size, sequence_length, hidden_size).Hidden-states of the model at the output of each layer plus the initial embedding outputs."
        },
        {
            "name": "attentions",
            "type": "tuple(tf.Tensor",
            "optional": true,
            "default": "",
            "description": "Tuple of tf.Tensor (one for each layer) of shape (batch_size, num_heads, sequence_length, x + attention_window + 1), where x is the number of tokens with global attention mask.Local attentions weights after the attention softmax, used to compute the weighted average in theself-attention heads. Those are the attention weights from every token in the sequence to every token withglobal attention (first x values) and to every token in the attention window (remaining `attention_window1values). Note that the firstxvalues refer to tokens with fixed positions in the text, but the remainingattention_window + 1values refer to tokens with relative positions: the attention weight of a token to itself is located at indexx + attention_window / 2and theattention_window / 2preceding (succeeding) values are the attention weights to theattention_window / 2preceding (succeeding) tokens. If the attention window contains a token with global attention, the attention weight at the corresponding index is set to 0, the value should be accessed from the firstxattention weights. If a token has global attention, the attention weights to all other tokens inattentionsis set to 0, the values should be accessed fromglobal_attentions`."
        },
        {
            "name": "global_attentions",
            "type": "tuple(tf.Tensor",
            "optional": true,
            "default": "",
            "description": "Tuple of tf.Tensor (one for each layer) of shape (batch_size, num_heads, sequence_length, x), where xis the number of tokens with global attention mask.Global attentions weights after the attention softmax, used to compute the weighted average in theself-attention heads. Those are the attention weights from every token with global attention to every tokenin the sequence."
        }
    ],
    "return": ""
}