{
    "api": "transformers.TapasForQuestionAnswering.forward",
    "type": "function",
    "version": "main",
    "args_list": [
        "input_ids:",
        "attention_mask",
        "token_type_ids",
        "position_ids",
        "head_mask",
        "inputs_embeds",
        "table_mask",
        "labels",
        "aggregation_labels",
        "float_answer",
        "numeric_values",
        "numeric_values_scale",
        "output_attentions",
        "output_hidden_states",
        "return_dict",
        ")"
    ],
    "params": [
        {
            "name": "input_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length)",
            "optional": false,
            "default": "",
            "description": "Indices of input sequence tokens in the vocabulary. Indices can be obtained using AutoTokenizer. SeePreTrainedTokenizer.encode() and PreTrainedTokenizer.call() for details.What are input IDs?"
        },
        {
            "name": "attention_mask",
            "type": "torch.FloatTensor of shape (batch_size, sequence_length",
            "optional": true,
            "default": "",
            "description": "Mask to avoid performing attention on padding token indices. Mask values selected in [0, 1]:1 for tokens that are not masked,0 for tokens that are masked.What are attention masks?"
        },
        {
            "name": "token_type_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length, 7",
            "optional": true,
            "default": "",
            "description": "Token indices that encode tabular structure. Indices can be obtained using AutoTokenizer. See thisclass for more info.What are token type IDs?"
        },
        {
            "name": "position_ids",
            "type": "torch.LongTensor of shape (batch_size, sequence_length",
            "optional": true,
            "default": "",
            "description": "Indices of positions of each input sequence tokens in the position embeddings. Ifreset_position_index_per_cell of TapasConfig is set to True, relative position embeddings will beused. Selected in the range [0, config.max_position_embeddings - 1].What are position IDs?"
        },
        {
            "name": "head_mask",
            "type": "torch.FloatTensor of shape (num_heads,),(num_layers, num_heads",
            "optional": true,
            "default": "",
            "description": "Mask to nullify selected heads of the self-attention modules. Mask values selected in [0, 1]: - 1indicates the head is not masked, - 0 indicates the head is masked."
        },
        {
            "name": "inputs_embeds",
            "type": "torch.FloatTensor of shape (batch_size, sequence_length, hidden_size",
            "optional": true,
            "default": "",
            "description": "Optionally, instead of passing input_ids you can choose to directly pass an embedded representation. Thisis useful if you want more control over how to convert input_ids indices into associated vectors than themodels internal embedding lookup matrix."
        },
        {
            "name": "output_attentions",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return the attentions tensors of all attention layers. See attentions under returnedtensors for more detail."
        },
        {
            "name": "output_hidden_states",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return the hidden states of all layers. See hidden_states under returned tensors formore detail."
        },
        {
            "name": "return_dict",
            "type": "bool",
            "optional": true,
            "default": "",
            "description": "Whether or not to return a ModelOutput instead of a plain tuple."
        },
        {
            "name": "table_mask",
            "type": "torch.LongTensor of shape (batch_size, seq_length",
            "optional": true,
            "default": "",
            "description": "Mask for the table. Indicates which tokens belong to the table (1). Question tokens, table headers andpadding are 0."
        },
        {
            "name": "labels",
            "type": "torch.LongTensor of shape (batch_size, seq_length",
            "optional": true,
            "default": "",
            "description": "Labels per token for computing the hierarchical cell selection loss. This encodes the positions of theanswer appearing in the table. Can be obtained using AutoTokenizer.1 for tokens that are part of the answer,0 for tokens that are not part of the answer."
        },
        {
            "name": "aggregation_labels",
            "type": "torch.LongTensor of shape (batch_size, ",
            "optional": true,
            "default": "",
            "description": "Aggregation function index for every example in the batch for computing the aggregation loss. Indicesshould be in [0, ..., config.num_aggregation_labels - 1]. Only required in case of strong supervision foraggregation (WikiSQL-supervised)."
        },
        {
            "name": "float_answer",
            "type": "torch.FloatTensor of shape (batch_size, ",
            "optional": true,
            "default": "",
            "description": "Float answer for every example in the batch. Set to float(nan) for cell selection questions. Onlyrequired in case of weak supervision (WTQ) to calculate the aggregate mask and regression loss."
        },
        {
            "name": "numeric_values",
            "type": "torch.FloatTensor of shape (batch_size, seq_length",
            "optional": true,
            "default": "",
            "description": "Numeric values of every token, NaN for tokens which are not numeric values. Can be obtained usingAutoTokenizer. Only required in case of weak supervision for aggregation (WTQ) to calculate theregression loss."
        },
        {
            "name": "numeric_values_scale",
            "type": "torch.FloatTensor of shape (batch_size, seq_length",
            "optional": true,
            "default": "",
            "description": "Scale of the numeric values of every token. Can be obtained using AutoTokenizer. Only required in caseof weak supervision for aggregation (WTQ) to calculate the regression loss."
        }
    ],
    "return": "transformers.models.tapas.modeling_tapas.TableQuestionAnsweringOutput or tuple(torch.FloatTensor)"
}