{
    "api": "paddlenlp.trainer.argparser.PdArgumentParser",
    "type": "class",
    "version": "stable",
    "args_list": {
        "dataclass_types": "DataClassType or Iterable[DataClassType]",
        "**kwargs": null
    },
    "Bases": "ArgumentParser",
    "description": "This subclass of argparse.ArgumentParser uses type hints on dataclasses to generate arguments.",
    "params": [
        {
            "name": "args",
            "type": "",
            "description": "List of strings to parse. The default is taken from sys.argv. (same as argparse.ArgumentParser)",
            "default": "",
            "optional": false
        },
        {
            "name": "return_remaining_strings",
            "type": "",
            "description": "If true, also return a list of remaining argument strings.",
            "default": "",
            "optional": false
        },
        {
            "name": "look_for_args_file",
            "type": "",
            "description": "If true, will look for a .args file with the same base name as the entry point script for thisprocess, and will append its potential content to the command line args.",
            "default": "",
            "optional": false
        },
        {
            "name": "args_filename",
            "type": "",
            "description": "If not None, will uses this file instead of the .args file specified in the previous argument.",
            "default": "",
            "optional": false
        }
    ],
    "return": {
        "description": "the dataclass instances in the same order as they were passed to the initializer.abspathif applicable, an additional namespace for more (non-dataclass backed) arguments added to the parserafter initialization.The potential list of remaining argument strings. (same as argparse.ArgumentParser.parse_known_args)the dataclass instances in the same order as they were passed to the initializer.abspathif applicable, an additional namespace for more (non-dataclass backed) arguments added to the parserafter initialization.The potential list of remaining argument strings. (same as argparse.ArgumentParser.parse_known_args)",
        "type": "Tuple consisting of"
    }
}